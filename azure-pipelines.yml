# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - master

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: "xudongACR"
  containerRegistry: "xudongacr.azurecr.io"
  resourceGroup: "myResourceGroup"
  portalHomeDockerFilePath: "$(Build.SourcesDirectory)/src/portal-home/Dockerfile"
  portalHomeImageRepository: "portal-home"
  weatherForecaseApiDockerFilePath: "$(Build.SourcesDirectory)/src/WeatherForecastAPI/Dockerfile"
  weatherForecaseApiImageRepository: "WeatherForecastApi"
  tag: "$(Build.BuildId)"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build and push
    jobs:
      - job: Build_PortalHome
        displayName: Build Portal Home Website
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push a Portal Home Website image to container registry
            inputs:
              command: buildAndPush
              repository: $(portalHomeImageRepository)
              dockerfile: $(portalHomeDockerFilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
      - job: Build_WeatherForecastApi
        displayName: Build WeatherForecast Api
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push a WeatherForecast Api image to container registry
            inputs:
              command: buildAndPush
              repository: $(weatherForecaseApiImageRepository)
              dockerfile: $(weatherForecaseApiDockerFilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
  - stage: Deploy
    displayName: Deploy
    jobs:
      - job: Deploy_By_Helm
        displayName: Deploy By Helm
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: HelmInstaller@0
            inputs:
              helmVersion: "latest"
              installKubectl: true
          
          - task: AzureCLI@2
            inputs:
              azureSubscription: "connection"              
              scriptType: pscore
              addSpnToEnvironment: true
              scriptLocation: inlineScript
              inlineScript: |
                cat <<EOT >> ~/.kube/config1
                apiVersion: v1
                clusters:
                - cluster:
                    insecure-skip-tls-verify: true
                    server: https://101.34.0.218:6443
                  name: default
                contexts:
                - context:
                    cluster: default
                    user: default
                  name: default
                current-context: default
                kind: Config
                preferences: {}
                users:
                - name: default
                user:
                  client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJrRENDQVRlZ0F3SUJBZ0lJSDVPUUpINkJ5Mmt3Q2dZSUtvWkl6ajBFQXdJd0l6RWhNQjhHQTFVRUF3d1kKYXpOekxXTnNhV1Z1ZEMxallVQXhOamN4TVRjd056RTBNQjRYRFRJeU1USXhOakEyTURVeE5Gb1hEVEl6TVRJeApOakEyTURVeE5Gb3dNREVYTUJVR0ExVUVDaE1PYzNsemRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41CmMzUmxiVHBoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJIaWwrMGgzTzJNVTAvaUMKRUkzbENlaUpJZk02eUxEemRrWWQ3dXdtcUlvM1cvQ2lRdC9pcTB5VURrZTZzb2pCYUpOVm1uUXlNUUNDMXBMQgpyVlBMdWNxalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFmCkJnTlZIU01FR0RBV2dCU0g1aWJhNFo5ZlBrTHR0MlF5NS90NWpYVks5ekFLQmdncWhrak9QUVFEQWdOSEFEQkUKQWlCYXo0Sm5CYlB4STBNelZHMkJRcGs3dGw0aUhSZWRRa2w5ek90elQ0OUR6QUlnYmZVaklUQk1qU3U2d3VSWApVRjhYRWYyK1Z6ajJLNU1QVHV1eDBqZk56eDg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkekNDQVIyZ0F3SUJBZ0lCQURBS0JnZ3Foa2pPUFFRREFqQWpNU0V3SHdZRFZRUUREQmhyTTNNdFkyeHAKWlc1MExXTmhRREUyTnpFeE56QTNNVFF3SGhjTk1qSXhNakUyTURZd05URTBXaGNOTXpJeE1qRXpNRFl3TlRFMApXakFqTVNFd0h3WURWUVFEREJock0zTXRZMnhwWlc1MExXTmhRREUyTnpFeE56QTNNVFF3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFUdDlvam0wQ2VjbmQyODllVVIrWHY5c1hBdG0wRTBPOU9mY2VrQmRKQVUKdmswZ1Y2Q2plUm9MR05jb0JHRGRRM0pSclo5aUpZeldVam16dmh3S1BybTVvMEl3UURBT0JnTlZIUThCQWY4RQpCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVWgrWW0ydUdmWHo1QzdiZGtNdWY3CmVZMTFTdmN3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQVByNkduUEhYaU4xWlZSZ2Y3Ynh4TkRrZHlNNTBIRFMKWlduL1BLUVM0NlNZQWlCY0ZEL2h0RE4rcVNtN2ZiejFYRm5Xbk8zbk1rNWY2T2Y4YXdvMy9HNDlrdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
                  client-key-data: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSURpL2RSY2lFTFBJdnpqUnJmc1dFTUhFbFE5VTdUZnZFTlhmR3pYcVFrS3dvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZUtYN1NIYzdZeFRUK0lJUWplVUo2SWtoOHpySXNQTjJSaDN1N0Nhb2lqZGI4S0pDMytLcgpUSlFPUjdxeWlNRm9rMVdhZERJeEFJTFdrc0d0VTh1NXlnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
                EOT                
                [System.Environment]::SetEnvironmentVariable("$KUBECONFIG", "~/.kube/config1")
                [System.Environment]::SetEnvironmentVariable("HELM_EXPERIMENTAL_OCI", "1")
                helm registry login xudongacr.azurecr.io --username xudongACR --password jwIjWB/RJ7OUSi9qJHmVEx8OpUYPfeGg 
                helm upgrade --namespace myaksdemo --install --set version=$(Build.BuildId) --wait aksdemo /home/vsts/work/1/s/helm