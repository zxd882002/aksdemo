# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - master

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: "xudongACR"
  containerRegistry: "xudongacr.azurecr.io"
  resourceGroup: "myResourceGroup"
  portalHomeDockerFilePath: "$(Build.SourcesDirectory)/src/portal-home/Dockerfile"
  portalHomeImageRepository: "portal-home"
  weatherForecaseApiDockerFilePath: "$(Build.SourcesDirectory)/src/WeatherForecastAPI/Dockerfile"
  weatherForecaseApiImageRepository: "WeatherForecastApi"
  tag: "$(Build.BuildId)"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build and push
    jobs:
      - job: Build_PortalHome
        displayName: Build Portal Home Website
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push a Portal Home Website image to container registry
            inputs:
              command: buildAndPush
              repository: $(portalHomeImageRepository)
              dockerfile: $(portalHomeDockerFilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
      - job: Build_WeatherForecastApi
        displayName: Build WeatherForecast Api
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push a WeatherForecast Api image to container registry
            inputs:
              command: buildAndPush
              repository: $(weatherForecaseApiImageRepository)
              dockerfile: $(weatherForecaseApiDockerFilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
  - stage: Deploy
    displayName: Deploy
    jobs:
      - job: Deploy_By_Helm
        displayName: Deploy By Helm
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: HelmInstaller@0
            inputs:
              helmVersion: "latest"
              installKubectl: true          
          - task: AzureCLI@2
            inputs:
              azureSubscription: "connection"
              scriptType: pscore
              addSpnToEnvironment: true
              scriptLocation: inlineScript
              inlineScript: |
                [System.Environment]::SetEnvironmentVariable("HELM_EXPERIMENTAL_OCI", "1")                
                helm registry login xudongacr.azurecr.io --username xudongACR --password jwIjWB/RJ7OUSi9qJHmVEx8OpUYPfeGg
          - task: HelmDeploy@0
            inputs:
              connectionType: "Kubernetes Service Connection"
              kubernetesServiceEndpoint: "tecent"
              namespace: "myaksdemo"
              command: "upgrade"
              chartType: "FilePath"
              chartPath: "./helm"
              releaseName: aksdemo
              overrideValues: "version=$(Build.BuildId)"
              azureSubscriptionForACR: "connection"
              azureResourceGroupForACR: $(resourceGroup)
              azureContainerRegistry: $(dockerRegistryServiceConnection)